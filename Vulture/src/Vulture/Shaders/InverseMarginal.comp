#version 460

layout (local_size_x = 1, local_size_y = 8, local_size_z = 1) in;

layout (set = 0, binding = 0, r32f) uniform image2D uInverse;
layout (set = 0, binding = 1) uniform sampler2D uAverageRowImage;

float p2t(in float p, in int noOfPixels)
{
	return (p + 0.5) / float(noOfPixels);
}

void main()
{
	vec2 pixelCoord = vec2(ivec2(gl_GlobalInvocationID.xy));
	vec2 textureSize = vec2(textureSize(uAverageRowImage, 0));
	vec2 texCoord = pixelCoord / textureSize;
	int column = int(gl_GlobalInvocationID.x);
	float u = texCoord.y;

	int y;
	float sum = 0.0f;
	for (y = 0; y < textureSize.y; y++)
	{
		sum += texelFetch(uAverageRowImage, ivec2(column, y), 0).r / float(textureSize.y);
		if (sum >= u)
		{
			break;
		}
	}
	float cdfYInv = p2t(float(y), int(textureSize.y));

	imageStore(uInverse, ivec2(gl_GlobalInvocationID.xy), vec4(cdfYInv, cdfYInv, cdfYInv, 1.0f));
}